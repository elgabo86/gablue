#!/usr/bin/bash

set -eoux pipefail

echo "::group::Executing install-kernel"
trap 'echo "::group::"' EXIT

# create a shims to bypass kernel install triggering dracut/rpm-ostree
pushd /usr/lib/kernel/install.d || exit 1
mv 05-rpmostree.install 05-rpmostree.install.bak 2>/dev/null || true
mv 50-dracut.install 50-dracut.install.bak 2>/dev/null || true
printf '%s\n' '#!/bin/sh' 'exit 0' > 05-rpmostree.install
printf '%s\n' '#!/bin/sh' 'exit 0' > 50-dracut.install
chmod +x 05-rpmostree.install 50-dracut.install
popd

# Remove kernel packages
dnf5 -y remove --no-autoremove kernel kernel-core kernel-modules kernel-modules-core kernel-modules-extra kernel-tools kernel-tools-libs

# Define kernel packages to install (Bazzite pattern: always include kernel, then add nvidia packages)
pkgs=(
 kernel
 kernel-core
 kernel-modules
 kernel-modules-core
 kernel-modules-extra
 kernel-modules-akmods
 kernel-devel
 kernel-devel-matched
 kernel-tools
 kernel-tools-libs
 kernel-common
 kernel-uki-virt
)

# Add NVIDIA packages IN ADDITION TO standard kernel packages
if [[ "$VARIANT" == *"nvidia-open"* ]]; then
 echo "Using NVIDIA Open Kernel"
 pkgs+=("kernel-nvidia")
elif [[ "$VARIANT" == *"nvidia"* ]]; then
 echo "Using NVIDIA Closed Kernel with Legacy driver"
 pkgs+=("kernel-nvidia-closed-lts")
fi

# Install kernel from OCI container
# Find kernel RPMs and install them
shopt -s nullglob
PKG_PAT=()
for pkg in "${pkgs[@]}"; do
 # Look for kernel packages in /rpms/kernel/
 # Use - for exact match: kernel-6... (not kernel-nvidia-6...)
 for file in "/rpms/kernel/${pkg}-6"*.rpm; do
     [ -f "$file" ] && PKG_PAT+=("$file")
 done
done

echo "Installing kernel packages..."
printf '%s\n' "${PKG_PAT[@]}"
if [ ${#PKG_PAT[@]} -gt 0 ]; then
    dnf5 -y install ${PKG_PAT[@]}
else
    echo "ERROR: No kernel packages found!"
    exit 1
fi

# Versionlock the kernel packages (exclude kernel-uki-virt which uses Fedora versions, not bazzite)
dnf5 versionlock add kernel kernel-devel kernel-devel-matched kernel-core kernel-modules kernel-modules-core kernel-modules-extra kernel-modules-akmods kernel-tools kernel-tools-libs kernel-common

# Restore kernel install scripts
pushd /usr/lib/kernel/install.d || exit 1
mv -f 05-rpmostree.install.bak 05-rpmostree.install 2>/dev/null || true
mv -f 50-dracut.install.bak 50-dracut.install 2>/dev/null || true
popd

# Additional kmods will be handled by bazzite kernel image or omitted for now

dnf5 -y copr enable bieszczaders/kernel-cachyos-addons && \
dnf5 -y install \
    scx-scheds && \
dnf5 -y copr disable bieszczaders/kernel-cachyos-addons
