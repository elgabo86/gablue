#!/usr/bin/bash

# Arrêter le script à la moindre erreur
set -e

user=$(whoami)
dossieruser="~/Windows/UserData/$user"
dxvkversion="dxvk-gplasync-v2.6-1"
vkd3dversion="vkd3d-proton-2.14.1"
nvapiversion="dxvk-nvapi-v0.8.0"
latencyflexversion="latencyflex-v0.1.1-2-3bc9636"

# Récupérer la dernière version de gwine
API_URL="https://api.github.com/repos/elgabo86/gwine/releases/latest"
wineversion=$(curl -s $API_URL | grep '"tag_name":' | sed -E 's/.*"tag_name": "([^"]+)".*/\1/')

# Lancer la barre de progression avec kdialog
dbusRef=$(kdialog --title "Installation/Mise à jour de Windows" --progressbar "Initialisation..." 100)
qdbus $dbusRef showCancelButton false

# Fonction pour comparer les versions
version_newer() {
    local v1="$1" v2="$2"
    if [ "$v1" = "$v2" ]; then
        return 1 # égal
    fi
    [ "$(printf '%s\n' "$v1" "$v2" | sort -V | tail -n1)" = "$v1" ]
}

# Fonction pour gérer les erreurs et restaurer la sauvegarde
cleanup_on_error() {
    qdbus $dbusRef setLabelText "Erreur détectée, restauration en cours..."
    rm -rf ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def
    if [ -d ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def.bak ]; then
        mv ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def.bak ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def
    fi
    qdbus $dbusRef close
    kdialog --msgbox "Erreur de l'installation/mise à jour de Windows"
    exit 1
}

trap 'cleanup_on_error' ERR

qdbus $dbusRef Set "" "value" 0
qdbus $dbusRef setLabelText "Arrêt des processus bottles..."

echo "Installation/Mise à jour de Windows"
pgrep -f bottles | xargs -n1 kill -9 &
sleep 2

qdbus $dbusRef Set "" "value" 10
qdbus $dbusRef setLabelText "Préparation des répertoires..."
if [ -d ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def ]; then
    rm -rf ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def.bak
    mv ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def.bak
fi
mkdir -p ~/.var/app/com.usebottles.bottles/data/bottles/dxvk/ ~/.var/app/com.usebottles.bottles/data/bottles/runners/ ~/.var/app/com.usebottles.bottles/data/bottles/vkd3d/ ~/.var/app/com.usebottles.bottles/data/bottles/nvapi/ ~/.var/app/com.usebottles.bottles/data/bottles/latencyflex/

# Installation de Wine
qdbus $dbusRef Set "" "value" 20
qdbus $dbusRef setLabelText "Téléchargement et installation de Wine..."
wine_dir=~/.var/app/com.usebottles.bottles/data/bottles/runners/
if [ -d "$wine_dir/$(basename $wineversion .tar.xz)" ]; then
    current_wine=$(ls -d $wine_dir/* | grep -o 'gwine-[0-9.r-]*' | head -n1)
    if ! version_newer "$wineversion" "$current_wine"; then
        echo "Version de Wine $wineversion déjà présente ou plus récente, téléchargement ignoré."
    else
        rm -rf "$wine_dir"/*
        curl -L -o "$wine_dir/$wineversion.tar.xz" "https://github.com/elgabo86/gwine/releases/download/$wineversion/$wineversion.tar.xz"
        tar -xf "$wine_dir/$wineversion.tar.xz" -C "$wine_dir/"
        rm -f "$wine_dir/$wineversion.tar.xz"
    fi
else
    curl -L -o "$wine_dir/$wineversion.tar.xz" "https://github.com/elgabo86/gwine/releases/download/$wineversion/$wineversion.tar.xz"
    tar -xf "$wine_dir/$wineversion.tar.xz" -C "$wine_dir/"
    rm -f "$wine_dir/$wineversion.tar.xz"
fi

# Installation de DXVK
qdbus $dbusRef Set "" "value" 30
qdbus $dbusRef setLabelText "Installation de DXVK..."
dxvk_dir=~/.var/app/com.usebottles.bottles/data/bottles/dxvk/
if [ -d "$dxvk_dir/$(basename $dxvkversion .tar.gz)" ]; then
    current_dxvk=$(ls -d $dxvk_dir/* | grep -o 'dxvk-gplasync-v[0-9.-]*' | head -n1)
    if ! version_newer "$dxvkversion" "$current_dxvk"; then
        echo "Version de DXVK $dxvkversion déjà présente ou plus récente, téléchargement ignoré."
    else
        rm -rf "$dxvk_dir"/*
        curl -L -o "$dxvk_dir/$dxvkversion.tar.gz" "https://gitlab.com/Ph42oN/dxvk-gplasync/-/raw/main/releases/$dxvkversion.tar.gz"
        tar -xf "$dxvk_dir/$dxvkversion.tar.gz" -C "$dxvk_dir/"
        rm -f "$dxvk_dir/$dxvkversion.tar.gz"
    fi
else
    curl -L -o "$dxvk_dir/$dxvkversion.tar.gz" "https://gitlab.com/Ph42oN/dxvk-gplasync/-/raw/main/releases/$dxvkversion.tar.gz"
    tar -xf "$dxvk_dir/$dxvkversion.tar.gz" -C "$dxvk_dir/"
    rm -f "$dxvk_dir/$dxvkversion.tar.gz"
fi

# Installation de VKD3D
qdbus $dbusRef Set "" "value" 40
qdbus $dbusRef setLabelText "Installation de VKD3D..."
vkd3d_dir=~/.var/app/com.usebottles.bottles/data/bottles/vkd3d/
if [ -d "$vkd3d_dir/$(basename $vkd3dversion .tar.zst)" ]; then
    current_vkd3d=$(ls -d $vkd3d_dir/* | grep -o 'vkd3d-proton-[0-9.-]*' | head -n1)
    if ! version_newer "$vkd3dversion" "$current_vkd3d"; then
        echo "Version de VKD3D $vkd3dversion déjà présente ou plus récente, téléchargement ignoré."
    else
        rm -rf "$vkd3d_dir"/*
        curl -L -o "$vkd3d_dir/$vkd3dversion.tar.zst" "https://github.com/HansKristian-Work/vkd3d-proton/releases/download/v2.14.1/$vkd3dversion.tar.zst"
        tar -xf "$vkd3d_dir/$vkd3dversion.tar.zst" -C "$vkd3d_dir/"
        rm -f "$vkd3d_dir/$vkd3dversion.tar.zst"
    fi
else
    curl -L -o "$vkd3d_dir/$vkd3dversion.tar.zst" "https://github.com/HansKristian-Work/vkd3d-proton/releases/download/v2.14.1/$vkd3dversion.tar.zst"
    tar -xf "$vkd3d_dir/$vkd3dversion.tar.zst" -C "$vkd3d_dir/"
    rm -f "$vkd3d_dir/$vkd3dversion.tar.zst"
fi

# Installation de composants additionnels
qdbus $dbusRef Set "" "value" 50
qdbus $dbusRef setLabelText "Installation de composants additionnels..."

# Installation de dxvk-nvapi
nvapi_dir=~/.var/app/com.usebottles.bottles/data/bottles/nvapi/
if [ -d "$nvapi_dir/$(basename $nvapiversion .tar.gz)" ]; then
    current_nvapi=$(ls -d $nvapi_dir/* | grep -o 'dxvk-nvapi-v[0-9.-]*' | head -n1)
    if ! version_newer "$nvapiversion" "$current_nvapi"; then
        echo "Version de dxvk-nvapi $nvapiversion déjà présente ou plus récente, téléchargement ignoré."
    else
        rm -rf "$nvapi_dir"/*
        curl -L -o "$nvapi_dir/$nvapiversion.tar.gz" "https://github.com/bottlesdevs/components/releases/download/$nvapiversion/$nvapiversion.tar.gz"
        tar -xf "$nvapi_dir/$nvapiversion.tar.gz" -C "$nvapi_dir/"
        rm -f "$nvapi_dir/$nvapiversion.tar.gz"
    fi
else
    curl -L -o "$nvapi_dir/$nvapiversion.tar.gz" "https://github.com/bottlesdevs/components/releases/download/$nvapiversion/$nvapiversion.tar.gz"
    tar -xf "$nvapi_dir/$nvapiversion.tar.gz" -C "$nvapi_dir/"
    rm -f "$nvapi_dir/$nvapiversion.tar.gz"
fi

# Installation de latencyflex
latencyflex_dir=~/.var/app/com.usebottles.bottles/data/bottles/latencyflex/
if [ -d "$latencyflex_dir/$(basename $latencyflexversion .tar.gz)" ]; then
    current_latencyflex=$(ls -d $latencyflex_dir/* | grep -o 'latencyflex-v[0-9.-]*' | head -n1)
    if ! version_newer "$latencyflexversion" "$current_latencyflex"; then
        echo "Version de latencyflex $latencyflexversion déjà présente ou plus récente, téléchargement ignoré."
    else
        rm -rf "$latencyflex_dir"/*
        curl -L -o "$latencyflex_dir/$latencyflexversion.tar.gz" "https://github.com/bottlesdevs/components/releases/download/$latencyflexversion/$latencyflexversion.tar.gz"
        tar -xf "$latencyflex_dir/$latencyflexversion.tar.gz" -C "$latencyflex_dir/"
        rm -f "$latencyflex_dir/$latencyflexversion.tar.gz"
    fi
else
    curl -L -o "$latencyflex_dir/$latencyflexversion.tar.gz" "https://github.com/bottlesdevs/components/releases/download/$latencyflexversion/$latencyflexversion.tar.gz"
    tar -xf "$latencyflex_dir/$latencyflexversion.tar.gz" -C "$latencyflex_dir/"
    rm -f "$latencyflex_dir/$latencyflexversion.tar.gz"
fi

# Configuration de Bottles
qdbus $dbusRef Set "" "value" 60
qdbus $dbusRef setLabelText "Configuration de Bottles..."

flatpak run --command=bottles-cli com.usebottles.bottles new --bottle-name "def" --runner $wineversion --environment gaming
flatpak override com.usebottles.bottles --user --filesystem=~/Windows
mkdir -p ~/Windows/UserData ~/Windows/SteamData ~/Windows/Games ~/Windows/Applications ~/Windows/Tools ~/.local/share/applications/
rm -rf ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/drive_c/users/
ln -s ~/Windows/UserData/ ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/drive_c/users
ln -s ~/Windows/SteamData/ ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/drive_c/ProgramData/Steam
ln -s ~/Windows/Applications/ ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/drive_c/
ln -s ~/Windows/Games/ ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/drive_c/
ln -f -s -T ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/drive_c/ ~/Windows/WinDrive

# Ajout des clés de registre
qdbus $dbusRef Set "" "value" 70
qdbus $dbusRef setLabelText "Ajout des clés de registre..."

waitwine flatpak run --command=bottles-cli com.usebottles.bottles reg add -b def -k "HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\winebus" -v "Enable SDL" -d 1 -t "REG_DWORD"
waitwine flatpak run --command=bottles-cli com.usebottles.bottles reg add -b def -k "HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\winebus" -v "DisableHidraw" -d 1 -t "REG_DWORD"
waitwine flatpak run --command=bottles-cli com.usebottles.bottles reg add -b def -k "HKEY_CURRENT_USER\Software\Wine\Drivers" -v "Graphics" -d "X11" -t "REG_SZ"

# Configuration des raccourcis et outils
qdbus $dbusRef Set "" "value" 80
qdbus $dbusRef setLabelText "Configuration des raccourcis et outils..."

cp /usr/share/ublue-os/gablue/desktops/com.usebottles.bottles.desktop ~/.local/share/applications/
cp /usr/share/ublue-os/gablue/desktops/Windows.desktop ~/.local/share/applications/
cp /usr/share/ublue-os/gablue/desktops/WindowsFix.desktop ~/.local/share/applications/
cp /usr/share/ublue-os/gablue/desktops/WindowsTerminal.desktop ~/.local/share/applications/
cp /usr/share/ublue-os/gablue/desktops/KillWindows.desktop ~/.local/share/applications/
mkdir -p ~/.local/share/kio/servicemenus/
cp /usr/share/ublue-os/gablue/desktops/servicemenus/CreateWinShortcut.desktop ~/.local/share/kio/servicemenus/
cp /usr/share/ublue-os/gablue/desktops/servicemenus/InstallWinReg.desktop ~/.local/share/kio/servicemenus/
update-desktop-database ~/.local/share/applications
xdg-mime default Windows.desktop application/x-ms-dos-executable
xdg-mime default Windows.desktop application/x-msi
xdg-mime default Windows.desktop application/x-ms-shortcut
xdg-mime default Windows.desktop application/x-wine-extension-msp
xdg-mime default Windows.desktop application/x-bat
rm -rf ~/Windows/Tools/*
wget -O ~/Windows/Tools/winetricks https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
chmod +x ~/Windows/Tools/winetricks

# Installation des runtimes et finalisation
qdbus $dbusRef Set "" "value" 90
qdbus $dbusRef setLabelText "Installation des runtimes et finalisation..."

waitwine flatpak run --env=WINEPREFIX=/var/data/bottles/bottles/def --env=WINE=/var/data/bottles/runners/$wineversion/bin/wine --command=/var/home/$user/Windows/Tools/winetricks com.usebottles.bottles -q \
    corefonts \
    tahoma \
    d3dcompiler_42 \
    d3dcompiler_43 \
    d3dcompiler_47 \
    d3dx9 \
    msls31 \
    vb6run \
    mfc42 \
    physx \
    vcrun2010 \
    vcrun2012 \
    vcrun2013 \
    vcrun2022 \
    dotnetdesktop6 \
    dotnetdesktop7 \
    dotnetdesktop8
waitwine flatpak run --env=WINEPREFIX=/var/data/bottles/bottles/def --env=WINE=/var/data/bottles/runners/$wineversion/bin/wine --command=/var/home/$user/Windows/Tools/winetricks com.usebottles.bottles -q settings fontsmooth=rgb

qdbus $dbusRef Set "" "value" 100
qdbus $dbusRef setLabelText "Finalisation..."

flatpak install runtime/org.freedesktop.Platform.VulkanLayer.MangoHud/x86_64/24.08 -y
flatpak install runtime/com.obsproject.Studio.Plugin.OBSVkCapture/x86_64/stable -y
flatpak install runtime/org.freedesktop.Platform.VulkanLayer.OBSVkCapture/x86_64/24.08 -y
flatpak install runtime/org.freedesktop.Platform.VulkanLayer.gamescope/x86_64/24.08 -y
mkdir -p ~/.config/MangoHud/
cp /usr/share/ublue-os/gablue/MangoHud.conf ~/.config/MangoHud/
flatpak run --command=bottles-cli com.usebottles.bottles edit -b def --params mangohud:true
flatpak run --command=bottles-cli com.usebottles.bottles edit -b def --params gamemode:true
mkdir -p ~/Windows/UserData/Public/Documents/Steam/

# Compatibilité des saves entre proton/wine
if [ -e "$dossieruser" ]; then
    if [ ! -e "~/Windows/UserData/steamuser" ]; then
        ln -s "./$user" "~/Windows/UserData/steamuser"
    fi
else
    if [ -e "~/Windows/UserData/steamuser" ]; then
        ln -s "./steamuser" "$dossieruser"
    fi
fi

# Récupération des dossiers cache, grids et icons
qdbus $dbusRef setLabelText "Récupération des données de l'ancienne configuration..."
for dir in cache grids icons; do
    if [ -d ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def.bak/$dir ]; then
        rm -rf ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/$dir
        mv ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def.bak/$dir ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/
    fi
done

# Copie de la section External_Programs de def.bak vers def
qdbus $dbusRef setLabelText "Récupération des programmes externes..."
if [ -f ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def.bak/bottle.yml ] && [ -f ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/bottle.yml ]; then
    python3 - <<EOF
import yaml
import os

source_file = os.path.expanduser('~/.var/app/com.usebottles.bottles/data/bottles/bottles/def.bak/bottle.yml')
target_file = os.path.expanduser('~/.var/app/com.usebottles.bottles/data/bottles/bottles/def/bottle.yml')

with open(source_file, 'r') as file:
    source_data = yaml.safe_load(file)
external_programs = source_data.get('External_Programs', {})

with open(target_file, 'r') as file:
    target_data = yaml.safe_load(file)
target_data['External_Programs'] = external_programs

with open(target_file, 'w') as file:
    yaml.safe_dump(target_data, file, default_flow_style=False, allow_unicode=True)
EOF
fi

# Suppression de def.bak après la récupération
rm -rf ~/.var/app/com.usebottles.bottles/data/bottles/bottles/def.bak

qdbus $dbusRef close
kdialog --msgbox "L'installation/mise à jour de Windows est réussie"
