#!/bin/bash

# Vérifie les arguments
usage() {
    echo "Usage: $0 <watts> [--temp <temp>] [--save]"
    echo "   or: $0 --reset"
    echo "ex. : $0 35 pour 35W"
    echo "--temp <temp> : Définit la température maximale en °C (entre 50 et 105)."
    echo "--save : Crée ou met à jour un fichier .desktop dans ~/.config/autostart pour exécution automatique à l'ouverture de session."
    echo "--reset : Supprime le fichier .desktop pour enlever l'exécution automatique."
    exit 1
}

SAVE=0
RESET=0
WATTS=""
TEMP=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --save)
            SAVE=1
            shift
            ;;
        --reset)
            RESET=1
            shift
            ;;
        --temp)
            if [[ $# -lt 2 ]]; then
                echo "Erreur : --temp nécessite une valeur."
                usage
            fi
            TEMP=$2
            shift 2
            ;;
        -*)
            echo "Option inconnue : $1"
            usage
            ;;
        *)
            if [[ -n "$WATTS" ]]; then
                usage
            fi
            WATTS=$1
            shift
            ;;
    esac
done

if [ $RESET -eq 1 ]; then
    if [[ -n "$WATTS" ]] || [[ -n "$TEMP" ]] || [ $SAVE -eq 1 ]; then
        echo "Erreur : --reset ne peut pas être combiné avec d'autres options ou arguments."
        usage
    fi
    AUTOSTART_DIR="$HOME/.config/autostart"
    DESKTOP_FILE="$AUTOSTART_DIR/limit-tdp.desktop"
    if [ -f "$DESKTOP_FILE" ]; then
        rm "$DESKTOP_FILE"
        echo "Succès : Entrée autostart supprimée."
    else
        echo "Aucune entrée autostart à supprimer."
    fi
    exit 0
fi

if [[ -z "$WATTS" ]]; then
    usage
fi

# Vérifie si watts est un nombre entier positif
if ! [[ $WATTS =~ ^[0-9]+$ ]] || [ $WATTS -lt 5 ] || [ $WATTS -gt 100 ]; then
    echo "Erreur : <watts> doit être un nombre entier entre 5 et 100."
    exit 1
fi

# Vérifie si temp est fourni et valide
if [[ -n "$TEMP" ]]; then
    if ! [[ $TEMP =~ ^[0-9]+$ ]] || [ $TEMP -lt 50 ] || [ $TEMP -gt 105 ]; then
        echo "Erreur : --temp doit être un nombre entier entre 50 et 105."
        exit 1
    fi
fi

# Convertit en milliwatts
MW=$((WATTS * 1000))

# Construit la commande ryzenadj
RYZENADJ_CMD="sudo ryzenadj --stapm-limit=$MW --fast-limit=$MW --slow-limit=$MW"
if [[ -n "$TEMP" ]]; then
    RYZENADJ_CMD="$RYZENADJ_CMD -f $TEMP"
fi

# Exécute la commande
echo "Réglage des limites TDP à ${WATTS}W (${MW} mW)..."
if [[ -n "$TEMP" ]]; then
    echo "Réglage de la température maximale à ${TEMP}°C..."
fi
eval "$RYZENADJ_CMD"

if [ $? -eq 0 ]; then
    echo "Succès : TDP limité à ${WATTS}W."
    if [[ -n "$TEMP" ]]; then
        echo "Succès : Température maximale définie à ${TEMP}°C."
    fi
else
    echo "Erreur : Échec de l'exécution de ryzenadj. Vérifiez si l'outil est installé et si vous avez les droits sudo."
    exit 1
fi

# Si --save est spécifié, crée ou met à jour le fichier .desktop
if [ $SAVE -eq 1 ]; then
    SCRIPT_PATH=$(readlink -f "$0")
    AUTOSTART_DIR="$HOME/.config/autostart"
    mkdir -p "$AUTOSTART_DIR"
    DESKTOP_FILE="$AUTOSTART_DIR/limit-tdp.desktop"

    EXEC_LINE="$SCRIPT_PATH $WATTS"
    COMMENT="Set TDP limit to $WATTS W"
    if [[ -n "$TEMP" ]]; then
        EXEC_LINE="$EXEC_LINE --temp $TEMP"
        COMMENT="$COMMENT and max temp to $TEMP C"
    fi

    cat << EOF > "$DESKTOP_FILE"
[Desktop Entry]
Type=Application
Exec=$EXEC_LINE
Name=Limit TDP
Comment=$COMMENT
Terminal=false
EOF

    if [ $? -eq 0 ]; then
        echo "Succès : Entrée autostart créée ou mise à jour pour ${WATTS}W${TEMP:+ et temp ${TEMP}°C}."
    else
        echo "Erreur : Échec de la création de l'entrée autostart."
    fi
fi
