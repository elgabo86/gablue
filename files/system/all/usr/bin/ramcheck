#!/bin/bash

# Script pour afficher des infos sur les barrettes de RAM
# Version : 2.5 (2025-04-18)

# Vérifier si le script est exécuté avec les privilèges root
if [ "$EUID" -ne 0 ]; then
    echo "Ce script nécessite des privilèges root. Relance avec sudo..."
    exec sudo "$0" "$@"
fi

echo "Exécution de ramcheck (Version 2.5)"

# Vérifier si dmidecode est installé
if ! command -v dmidecode >/dev/null 2>&1; then
    echo "Erreur : dmidecode n'est pas installé. Installez-le avec :"
    echo "Sur Ubuntu/Debian : sudo apt install dmidecode"
    echo "Sur Fedora : sudo dnf install dmidecode"
    exit 1
fi

# Récupérer les informations sur la RAM avec dmidecode
RAM_INFO=$(dmidecode -t 17 2>/dev/null)
ARRAY_INFO=$(dmidecode -t 16 2>/dev/null)

# Vérifier si des informations RAM sont disponibles
if [ -z "$RAM_INFO" ]; then
    echo "Aucune information sur la RAM détectée."
    exit 1
fi

# Compter le nombre total de slots
TOTAL_SLOTS=$(echo "$RAM_INFO" | grep -c "Memory Device")

# Récupérer la capacité maximale
MAX_CAPACITY=$(echo "$ARRAY_INFO" | grep "Maximum Capacity" | awk '{print $3 " " $4}' || echo "N/A")

# Initialisation des variables
total_capacity=0
ram_count=0

# Fonction pour convertir la capacité en Go
convert_to_gb() {
    local size="$1"
    if [[ "$size" =~ ([0-9]+)\ *GiB ]]; then
        echo "${BASH_REMATCH[1]}"
    elif [[ "$size" =~ ([0-9]+)\ *MiB ]]; then
        echo $(( ${BASH_REMATCH[1]} / 1024 ))
    elif [[ "$size" =~ ([0-9]+)\ *GB ]]; then
        echo "${BASH_REMATCH[1]}"
    else
        echo "0"
    fi
}

# Afficher les détails pour chaque barrette
echo -e "\033[1;34m========================================\033[0m"
echo -e "\033[1;33mInformations sur les barrettes de RAM\033[0m"
echo -e "\033[1;34m========================================\033[0m"

# Parcourir chaque Memory Device
while IFS= read -r line; do
    if [[ "$line" =~ "Memory Device" ]]; then
        # Extraire les informations de la section courante
        section=$(echo "$RAM_INFO" | sed -n "/$line/,/^$/p")

        size=$(echo "$section" | grep "Size:" | awk '{print $2 " " $3}' | head -n 1)
        type=$(echo "$section" | grep "Type:" | awk '{print $2}' | head -n 1)
        speed=$(echo "$section" | grep "Configured Memory Speed:" | awk '{print $4 " " $5}' | head -n 1)
        locator=$(echo "$section" | grep "Locator:" | awk '{print $2}' | head -n 1)

        # Ignorer les slots vides
        if [[ "$size" =~ "No Module Installed" || -z "$size" ]]; then
            continue
        fi

        # Définir le type si non détecté
        if [[ -z "$type" || "$type" == "Unknown" ]]; then
            type="Non détecté"
        fi

        # Définir la vitesse si non détectée
        if [[ -z "$speed" ]]; then
            speed="N/A"
        fi

        # Incrémenter le compteur de barrettes
        ((ram_count++))

        # Convertir la capacité en Go
        capacity_gb=$(convert_to_gb "$size")
        if [[ "$capacity_gb" =~ ^[0-9]+$ && "$capacity_gb" != "0" ]]; then
            total_capacity=$((total_capacity + capacity_gb))
        fi

        echo -e "\033[1;36mBarette dans $locator\033[0m"
        echo -e "Capacité : \033[1;32m${size}\033[0m"
        echo -e "Type : \033[1;32m${type}\033[0m"
        echo -e "Fréquence : \033[1;32m${speed}\033[0m"
        echo -e "\033[1;34m----------------------------------------\033[0m"
    fi
done <<< "$RAM_INFO"

# Afficher le résumé
echo -e "\033[1;33mRésumé\033[0m"
echo -e "Nombre de barrettes installées : \033[1;36m${ram_count}\033[0m"
echo -e "Nombre total de slots : \033[1;36m${TOTAL_SLOTS}\033[0m"
echo -e "Capacité totale : \033[1;36m${total_capacity} Go\033[0m"
echo -e "Capacité maximale : \033[1;36m${MAX_CAPACITY}\033[0m"
echo -e "\033[1;34m========================================\033[0m"

# Message si aucune barrette détectée
if [ "$ram_count" -eq 0 ]; then
    echo -e "\033[1;31mAucune barrette de RAM fonctionnelle détectée.\033[0m"
fi
