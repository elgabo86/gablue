# Main arguments
ARG GABLUE_VARIANT="nvidia"
ARG SOURCE_IMAGE="kinoite"
ARG SOURCE_SUFFIX="-main"
ARG SOURCE_TAG="41"
ARG FEDORA_MAJOR_VERSION="41"
ARG KERNEL_TYPE="bazzite"
ARG KERNEL_VERSION="6.11.9-304"

# Import main packages
FROM ghcr.io/ublue-os/${KERNEL_TYPE}-kernel:${KERNEL_VERSION}.${KERNEL_TYPE}.fc${FEDORA_MAJOR_VERSION}.x86_64 AS kernel
FROM ghcr.io/ublue-os/akmods:${KERNEL_TYPE}-${FEDORA_MAJOR_VERSION}-${KERNEL_VERSION}.${KERNEL_TYPE}.fc${FEDORA_MAJOR_VERSION}.x86_64 AS akmods
FROM ghcr.io/ublue-os/akmods-extra:${KERNEL_TYPE}-${FEDORA_MAJOR_VERSION}-${KERNEL_VERSION}.${KERNEL_TYPE}.fc${FEDORA_MAJOR_VERSION}.x86_64 AS akmods-extra
FROM ghcr.io/ublue-os/akmods-nvidia:${KERNEL_TYPE}-${FEDORA_MAJOR_VERSION}-${KERNEL_VERSION}.${KERNEL_TYPE}.fc${FEDORA_MAJOR_VERSION}.x86_64 AS akmods-nvidia
FROM ghcr.io/ublue-os/${SOURCE_IMAGE}${SOURCE_SUFFIX}:${SOURCE_TAG}

# Copy files
COPY files/system/all /
COPY files/system/kinoite /
COPY files/system/nvidia /
RUN chmod +x /usr/libexec/containerbuild/*.sh

# Set environnement variables for scripts
ENV GABLUE_VARIANT="nvidia"
ENV SOURCE_IMAGE="kinoite"
ENV SOURCE_SUFFIX="-main"
ENV SOURCE_TAG="41"
ENV FEDORA_MAJOR_VERSION="41"
ENV OS_VERSION="41"

# Update packages that commonly cause build issues
RUN --mount=type=cache,dst=/var/cache/rpm-ostree \
    /usr/libexec/containerbuild/update-pkgs.sh && \
    /usr/libexec/containerbuild/cleanup.sh && \
    ostree container commit

# Setup copr repos
RUN --mount=type=cache,dst=/var/cache/rpm-ostree \
    /usr/libexec/containerbuild/copr.sh && \
    /usr/libexec/containerbuild/cleanup.sh && \
    ostree container commit

# Install kernel-
RUN --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=kernel,src=/tmp/rpms,dst=/tmp/kernel-rpms \
    /usr/libexec/containerbuild/kernel.sh && \
    /usr/libexec/containerbuild/cleanup.sh && \
    ostree container commit

# Add ublue packages
RUN --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=akmods,src=/rpms,dst=/tmp/akmods-rpms \
    --mount=type=bind,from=akmods-extra,src=/rpms,dst=/tmp/akmods-extra-rpms \
    /usr/libexec/containerbuild/akmods.sh && \
    /usr/libexec/containerbuild/cleanup.sh && \
    ostree container commit

# Install nvidia driver
RUN --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=akmods-nvidia,src=/rpms,dst=/tmp/akmods-rpms \
    /usr/libexec/containerbuild/nvidia.sh && \
    /usr/libexec/containerbuild/cleanup.sh && \
    ostree container commit

# Install rpm
RUN --mount=type=cache,dst=/var/cache/rpm-ostree \
    mkdir -p /var/lib/alternatives && \
    /usr/libexec/containerbuild/ublue-update.sh && \
    /usr/libexec/containerbuild/rpm.sh && \
    mv /var/lib/alternatives /staged-alternatives && \
    /usr/libexec/containerbuild/cleanup.sh && \
    ostree container commit

# Post-install
RUN mkdir -p /var/tmp && chmod 1777 /var/tmp && \
    /usr/libexec/containerbuild/systemd.sh && \
    /usr/libexec/containerbuild/post-install.sh && \
    /usr/libexec/containerbuild/initramfs.sh && \
    /usr/libexec/containerbuild/cleanup.sh && \
    ostree container commit && \
    mkdir -p /var/lib && mv /staged-alternatives /var/lib/alternatives && \
    mkdir -p /var/tmp && chmod 1777 /var/tmp && \
    rm -rf /usr/libexec/containerbuild
