name: Build and Publish ISOs
on:
  schedule:
    - cron: "0 0 */5 * *"  # Tous les 5 jours à minuit UTC
  workflow_dispatch:       # Déclenchement manuel

jobs:
  build-and-upload-isos:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        iso:
          - name: "gablue-main"
            repo: "ghcr.io/elgabo86"
            tag: "latest"
            version: "41"
            variant: "Kinoite"
          - name: "gablue-nvidia"
            repo: "ghcr.io/elgabo86"
            tag: "latest"
            version: "41"
            variant: "Kinoite"
          - name: "gablue-nvidia-open"
            repo: "ghcr.io/elgabo86"
            tag: "latest"
            version: "41"
            variant: "Kinoite"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ISO
        uses: jasonn3/build-container-installer@main
        id: build
        with:
          arch: "x86_64"  # Par défaut, ajuste si besoin
          image_name: ${{ matrix.iso.name }}
          image_repo: ${{ matrix.iso.repo }}
          image_tag: ${{ matrix.iso.tag }}
          version: ${{ matrix.iso.version }}
          variant: ${{ matrix.iso.variant }}
          iso_name: ${{ matrix.iso.name }}-${{ matrix.iso.tag }}-${{ matrix.iso.version }}.iso

      - name: Upload ISO to Transfer.sh
        id: upload
        run: |
          ISO_PATH="${{ steps.build.outputs.iso_path }}"
          LINK=$(curl --upload-file "$ISO_PATH" "https://transfer.sh/${{ matrix.iso.name }}.iso")
          echo "Download link for ${{ matrix.iso.name }}: $LINK"
          echo "DOWNLOAD_LINK=$LINK" >> $GITHUB_ENV
          # Stocker le lien dans une variable spécifique pour chaque ISO
          echo "${{ matrix.iso.name }}_link=$LINK" >> $GITHUB_STATE

    outputs:
      gablue_main_link: ${{ steps.upload.outputs.gablue-main_link }}
      gablue_nvidia_link: ${{ steps.upload.outputs.gablue-nvidia_link }}
      gablue_nvidia_open_link: ${{ steps.upload.outputs.gablue-nvidia-open_link }}

  create-release:
    needs: build-and-upload-isos
    runs-on: ubuntu-24.04
    steps:
      - name: Delete previous release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/latest-iso" | jq -r '.id')
          if [ "$RELEASE_ID" != "null" ]; then
            curl -s -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
            echo "Previous release deleted"
          else
            echo "No previous release found"
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "latest-iso"
          release_name: "Latest ISO Release"
          body: |
            Téléchargez les ISOs ici (valides 14 jours) :
            - **gablue-main**: ${{ needs.build-and-upload-isos.outputs.gablue_main_link }}
            - **gablue-nvidia**: ${{ needs.build-and-upload-isos.outputs.gablue_nvidia_link }}
            - **gablue-nvidia-open**: ${{ needs.build-and-upload-isos.outputs.gablue_nvidia_open_link }}
          draft: false
          prerelease: false
