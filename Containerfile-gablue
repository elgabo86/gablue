# Arguments pour configurer l'image de base et ses variantes, tous fournis par le workflow
ARG VARIANT
ARG SOURCE_IMAGE
ARG SOURCE_SUFFIX
ARG FEDORA_VERSION
ARG KERNEL_TYPE
ARG KERNEL_VERSION

# Étape intermédiaire : récupération du kernel depuis le conteneur OCI bazzite
FROM ghcr.io/bazzite-org/kernel-bazzite:latest-f${FEDORA_VERSION}-x86_64 AS akmods

# Étape intermédiaire : récupération des pilotes NVIDIA depuis le conteneur OCI bazzite
FROM ghcr.io/bazzite-org/nvidia-drivers:latest-f${FEDORA_VERSION}-x86_64 AS nvidia-akmods

# Étape intermédiaire : récupérer les pilotes NVIDIA Open (même source, on filtre plus tard)
FROM ghcr.io/bazzite-org/nvidia-drivers:latest-f${FEDORA_VERSION}-x86_64 AS nvidia-open-akmods

# Étape intermédiaire : création d'un contexte pour copier les scripts
FROM scratch AS ctx
COPY files/scripts /

# Image de base pour la construction finale
FROM ghcr.io/ublue-os/${SOURCE_IMAGE}${SOURCE_SUFFIX}:${FEDORA_VERSION}

# Redéfinition des arguments après le FROM pour les rendre disponibles
ARG VARIANT
ARG SOURCE_IMAGE

# Copie des fichiers système dans l'image
COPY files/system/all /
COPY files/system/${SOURCE_IMAGE} /
COPY files/system/${VARIANT} /

# Définition des variables d'environnement pour les scripts
ENV VARIANT=${VARIANT}
ENV SOURCE_IMAGE=${SOURCE_IMAGE}

# Configuration des dépôts Copr
RUN --mount=type=cache,dst=/var/cache/libdnf5 \
    --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=ctx,source=/,target=/ctx \
    --mount=type=tmpfs,dst=/tmp \
    sh /ctx/copr && \
    sh /ctx/cleanup

# Installation du kernel
RUN --mount=type=cache,dst=/var/cache/libdnf5 \
    --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=akmods,src=/,dst=/rpms/kernel \
    --mount=type=bind,from=ctx,source=/,target=/ctx \
    --mount=type=tmpfs,dst=/tmp \
    sh /ctx/kernel && \
    sh /ctx/cleanup

# Installation des pilotes NVIDIA (pour la variante nvidia uniquement)
RUN --mount=type=cache,dst=/var/cache/libdnf5 \
    --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=nvidia-akmods,src=/,dst=/rpms/nvidia \
    --mount=type=bind,from=ctx,source=/,target=/ctx \
    --mount=type=tmpfs,dst=/tmp \
    if [ "$VARIANT" = "nvidia" ]; then \
        sh /ctx/nvidia && \
        sh /ctx/cleanup; \
    fi

# Installation des pilotes NVIDIA Open (pour la variante nvidia-open uniquement)
RUN --mount=type=cache,dst=/var/cache/libdnf5 \
    --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=nvidia-open-akmods,src=/,dst=/rpms/nvidia \
    --mount=type=bind,from=ctx,source=/,target=/ctx \
    --mount=type=tmpfs,dst=/tmp \
    if [ "$VARIANT" = "nvidia-open" ]; then \
        sh /ctx/nvidia && \
        sh /ctx/cleanup; \
    fi

# Installation des paquets RPM supplémentaires
RUN --mount=type=cache,dst=/var/cache/libdnf5 \
    --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=ctx,source=/,target=/ctx \
    --mount=type=tmpfs,dst=/tmp \
    sh /ctx/rpm && \
    sh /ctx/cleanup

# Installation Mesa Terra (seulement pour les variantes non-NVIDIA)
RUN --mount=type=cache,dst=/var/cache/libdnf5 \
    --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=ctx,source=/,target=/ctx \
    --mount=type=tmpfs,dst=/tmp \
    if [ "$VARIANT" != "nvidia" ] && [ "$VARIANT" != "nvidia-open" ]; then \
        sh /ctx/mesa && \
        sh /ctx/cleanup; \
    fi

# Post-installation : configuration finale
RUN --mount=type=cache,dst=/var/cache/libdnf5 \
    --mount=type=cache,dst=/var/cache/rpm-ostree \
    --mount=type=bind,from=ctx,source=/,target=/ctx \
    --mount=type=tmpfs,dst=/tmp \
    sh /ctx/systemd && \
    sh /ctx/post-install && \
    sh /ctx/initramfs && \
    sh /ctx/finalize
